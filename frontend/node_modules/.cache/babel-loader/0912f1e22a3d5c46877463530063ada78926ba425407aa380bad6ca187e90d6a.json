{"ast":null,"code":"var _jsxFileName = \"/Users/zhuolin/PulseTrader-2/src/contexts/FirebaseContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, updateProfile } from 'firebase/auth';\nimport { auth, googleProvider } from '../services/firebase';\n\n// Your web app's Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCKFwGb99DhNy-1dNPEq-PdOkdbau4XluU\",\n  authDomain: \"pulsetrader-3505c.firebaseapp.com\",\n  projectId: \"pulsetrader-3505c\",\n  storageBucket: \"pulsetrader-3505c.firebasestorage.app\",\n  messagingSenderId: \"684793998943\",\n  appId: \"1:684793998943:web:7892e3d72c94b624e935ea\",\n  measurementId: \"G-ZZLWHGSSFP\"\n};\nconst FirebaseContext = /*#__PURE__*/createContext(undefined);\nexport const useFirebase = () => {\n  _s();\n  const context = useContext(FirebaseContext);\n  if (context === undefined) {\n    throw new Error('useFirebase must be used within a FirebaseProvider');\n  }\n  return context;\n};\n_s(useFirebase, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const FirebaseProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const signInWithGoogle = async () => {\n    const result = await signInWithPopup(auth, googleProvider);\n    const token = await result.user.getIdToken();\n    return token;\n  };\n  const signInWithEmail = async (email, password) => {\n    const result = await signInWithEmailAndPassword(auth, email, password);\n    const token = await result.user.getIdToken();\n    return token;\n  };\n  const signUpWithEmail = async (email, password, firstName, lastName) => {\n    const result = await createUserWithEmailAndPassword(auth, email, password);\n    // Update the user's profile with their name\n    await updateProfile(result.user, {\n      displayName: `${firstName} ${lastName}`\n    });\n    const token = await result.user.getIdToken();\n    return token;\n  };\n  const signOutUser = async () => {\n    await signOut(auth);\n  };\n  const value = {\n    user,\n    loading,\n    signInWithGoogle,\n    signInWithEmail,\n    signUpWithEmail,\n    signOutUser\n  };\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s2(FirebaseProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = FirebaseProvider;\nvar _c;\n$RefreshReg$(_c, \"FirebaseProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","signInWithPopup","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","updateProfile","auth","googleProvider","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","undefined","useFirebase","_s","context","Error","FirebaseProvider","children","_s2","user","setUser","loading","setLoading","unsubscribe","onAuthStateChanged","signInWithGoogle","result","token","getIdToken","signInWithEmail","email","password","signUpWithEmail","firstName","lastName","displayName","signOutUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zhuolin/PulseTrader-2/src/contexts/FirebaseContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport {\n  signInWithPopup,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  updateProfile,\n  User\n} from 'firebase/auth';\n\nimport { auth, db, googleProvider } from '../services/firebase';\n\n// Your web app's Firebase configuration\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCKFwGb99DhNy-1dNPEq-PdOkdbau4XluU\",\n  authDomain: \"pulsetrader-3505c.firebaseapp.com\",\n  projectId: \"pulsetrader-3505c\",\n  storageBucket: \"pulsetrader-3505c.firebasestorage.app\",\n  messagingSenderId: \"684793998943\",\n  appId: \"1:684793998943:web:7892e3d72c94b624e935ea\",\n  measurementId: \"G-ZZLWHGSSFP\"\n};\n\ninterface FirebaseContextType {\n  user: User | null;\n  loading: boolean;\n  signInWithGoogle: () => Promise<string>;\n  signInWithEmail: (email: string, password: string) => Promise<string>;\n  signUpWithEmail: (email: string, password: string, firstName: string, lastName: string) => Promise<string>;\n  signOutUser: () => Promise<void>;\n}\n\nconst FirebaseContext = createContext<FirebaseContextType | undefined>(undefined);\n\nexport const useFirebase = () => {\n  const context = useContext(FirebaseContext);\n  if (context === undefined) {\n    throw new Error('useFirebase must be used within a FirebaseProvider');\n  }\n  return context;\n};\n\nexport const FirebaseProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setUser(user);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const signInWithGoogle = async (): Promise<string> => {\n    const result = await signInWithPopup(auth, googleProvider);\n    const token = await result.user.getIdToken();\n    return token;\n  };\n\n  const signInWithEmail = async (email: string, password: string): Promise<string> => {\n    const result = await signInWithEmailAndPassword(auth, email, password);\n    const token = await result.user.getIdToken();\n    return token;\n  };\n\n  const signUpWithEmail = async (email: string, password: string, firstName: string, lastName: string): Promise<string> => {\n    const result = await createUserWithEmailAndPassword(auth, email, password);\n    // Update the user's profile with their name\n    await updateProfile(result.user, {\n      displayName: `${firstName} ${lastName}`\n    });\n    const token = await result.user.getIdToken();\n    return token;\n  };\n\n  const signOutUser = async () => {\n    await signOut(auth);\n  };\n\n  const value = {\n    user,\n    loading,\n    signInWithGoogle,\n    signInWithEmail,\n    signUpWithEmail,\n    signOutUser,\n  };\n\n  return (\n    <FirebaseContext.Provider value={value}>\n      {children}\n    </FirebaseContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}