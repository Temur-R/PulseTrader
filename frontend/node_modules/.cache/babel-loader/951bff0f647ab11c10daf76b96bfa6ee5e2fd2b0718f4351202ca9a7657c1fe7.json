{"ast":null,"code":"import { auth } from './firebase';\nexport class PulseTraderAPI {\n  constructor() {\n    this.baseUrl = void 0;\n    this.baseUrl = 'http://localhost:3001/api';\n  }\n  async getAuthToken() {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n    return user.getIdToken();\n  }\n  async request(endpoint, options = {}) {\n    try {\n      const token = await this.getAuthToken();\n      const headers = {\n        'Content-Type': 'application/json',\n        ...(token ? {\n          Authorization: `Bearer ${token}`\n        } : {}),\n        ...options.headers\n      };\n      console.log('Making API request to:', `${this.baseUrl}${endpoint}`);\n      console.log('Request options:', {\n        ...options,\n        headers: {\n          ...headers,\n          Authorization: token ? 'Bearer [TOKEN]' : undefined\n        }\n      });\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\n        ...options,\n        headers\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        console.error('API request failed:', {\n          status: response.status,\n          statusText: response.statusText,\n          error\n        });\n        throw new Error(error.error || 'Request failed');\n      }\n      const data = await response.json();\n      console.log('API response:', data);\n      return data;\n    } catch (error) {\n      console.error('API request error:', error);\n      throw error;\n    }\n  }\n\n  // Stock operations\n  async searchStocks(query) {\n    return this.request(`/stocks/search?q=${encodeURIComponent(query)}`);\n  }\n  async getStockData(symbol) {\n    return this.request(`/stocks/${symbol}`);\n  }\n  async getTrendingStocks() {\n    return this.request('/stocks/trending/market');\n  }\n\n  // Watchlist operations\n  async getWatchlist() {\n    return this.request('/watchlist');\n  }\n  async addToWatchlist(symbol, targetPrice, alertType = 'above') {\n    return this.request('/watchlist', {\n      method: 'POST',\n      body: JSON.stringify({\n        symbol,\n        targetPrice,\n        alertType\n      })\n    });\n  }\n  async removeFromWatchlist(symbol) {\n    return this.request(`/watchlist/${symbol}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Notifications\n  async getNotifications() {\n    return this.request('/notifications');\n  }\n  async markNotificationRead(id) {\n    return this.request(`/notifications/${id}/read`, {\n      method: 'PUT'\n    });\n  }\n  async deleteNotification(id) {\n    return this.request(`/notifications/${id}`, {\n      method: 'DELETE'\n    });\n  }\n}","map":{"version":3,"names":["auth","PulseTraderAPI","constructor","baseUrl","getAuthToken","user","currentUser","Error","getIdToken","request","endpoint","options","token","headers","Authorization","console","log","undefined","response","fetch","ok","error","json","status","statusText","data","searchStocks","query","encodeURIComponent","getStockData","symbol","getTrendingStocks","getWatchlist","addToWatchlist","targetPrice","alertType","method","body","JSON","stringify","removeFromWatchlist","getNotifications","markNotificationRead","id","deleteNotification"],"sources":["/Users/zhuolin/PulseTrader-2/frontend/src/services/api.ts"],"sourcesContent":["import { Stock, StockSearchResult, Notification, Analysis } from '../types';\nimport { auth } from './firebase';\n\nexport interface YahooStockData {\n  symbol: string;\n  name: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume?: number;\n  marketCap?: number;\n  high?: number;\n  low?: number;\n  open?: number;\n  previousClose?: number;\n  targetPrice?: number;\n  alertType?: 'above' | 'below';\n}\n\nexport class PulseTraderAPI {\n  private baseUrl: string;\n\n  constructor() {\n    this.baseUrl = 'http://localhost:3001/api';\n  }\n\n  private async getAuthToken(): Promise<string | null> {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n    return user.getIdToken();\n  }\n\n  private async request(endpoint: string, options: RequestInit = {}) {\n    try {\n      const token = await this.getAuthToken();\n      const headers = {\n        'Content-Type': 'application/json',\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n        ...options.headers,\n      };\n\n      console.log('Making API request to:', `${this.baseUrl}${endpoint}`);\n      console.log('Request options:', {\n        ...options,\n        headers: {\n          ...headers,\n          Authorization: token ? 'Bearer [TOKEN]' : undefined\n        }\n      });\n\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\n        ...options,\n        headers,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        console.error('API request failed:', {\n          status: response.status,\n          statusText: response.statusText,\n          error\n        });\n        throw new Error(error.error || 'Request failed');\n      }\n\n      const data = await response.json();\n      console.log('API response:', data);\n      return data;\n    } catch (error) {\n      console.error('API request error:', error);\n      throw error;\n    }\n  }\n\n  // Stock operations\n  async searchStocks(query: string): Promise<YahooStockData[]> {\n    return this.request(`/stocks/search?q=${encodeURIComponent(query)}`);\n  }\n\n  async getStockData(symbol: string): Promise<YahooStockData> {\n    return this.request(`/stocks/${symbol}`);\n  }\n\n  async getTrendingStocks(): Promise<YahooStockData[]> {\n    return this.request('/stocks/trending/market');\n  }\n\n  // Watchlist operations\n  async getWatchlist(): Promise<YahooStockData[]> {\n    return this.request('/watchlist');\n  }\n\n  async addToWatchlist(symbol: string, targetPrice: number, alertType: 'above' | 'below' = 'above'): Promise<void> {\n    return this.request('/watchlist', {\n      method: 'POST',\n      body: JSON.stringify({ symbol, targetPrice, alertType }),\n    });\n  }\n\n  async removeFromWatchlist(symbol: string): Promise<void> {\n    return this.request(`/watchlist/${symbol}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Notifications\n  async getNotifications(): Promise<Notification[]> {\n    return this.request('/notifications');\n  }\n\n  async markNotificationRead(id: string): Promise<void> {\n    return this.request(`/notifications/${id}/read`, {\n      method: 'PUT',\n    });\n  }\n\n  async deleteNotification(id: string): Promise<void> {\n    return this.request(`/notifications/${id}`, {\n      method: 'DELETE',\n    });\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}